
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<div class="container mt-5">
    <div class="row">
        <div class="col">
            <div class="card mx-auto shadow bg-white rounded rp-card-field">
                <article class="card-body">
                    <div class="row mb-5">
                        <div class="col text-center">
                            <img class="img-fluid" src="~/Images/resetpassword1.png" />
                            <h4>Set Your Password </h4>
                            <div class="input-group mb-3">
                                <div class="input-group-prepend me-2">
                                    <span class="iconify" data-icon="fluent:key-32-filled"></span>
                                </div>
                                <input id="newPassword" class="form-control" type="password" placeholder="New Password" name="" required />
                            </div>
                            <span class="error-text"><p class="text-center confirm-password-error"></p></span>
                            <div class="input-group mb-3">
                                <div class="input-group-prepend me-2">
                                    <span class="iconify" data-icon="fluent:key-32-filled"></span>
                                </div>
                                <input id="confirmNewPassword" class="form-control" type="password" placeholder="Confirm Password" name="" required />
                            </div>
                            <input id="btnSetNewPassword" class="btn btn-primary" type="submit" name="" value="Continue" />
                        </div>
                    </div>
                </article>
            </div>
        </div>
    </div>
</div>

<script>

    let accountId = @(ViewBag.AccountID);

    $(function () {


        let _api = "@(ViewBag.Api)";

        $.ajax({
            url: '/student-get-token-by-id-and-type/' + accountId + '/admin',
            method: 'GET',
            //data: {
            //    DateFrom: _DateFrom,
            //    DateTo: _DateTo,
            //    SelectBy: selectBy,

            //},

        }).done(function (res) {

            if (res.IsATokenExpire == false) {

            } else {

                window.location.replace("/Error/TokenExpired");

            }


        }).fail(function (err) {

            console.log("error: ", err)

        });

    });

    $('#btnSetNewPassword').click(function (e) {
        e.preventDefault();
        var _newPassword = $.trim($('#newPassword').val());
        var _confirmNewPassword = $.trim($('#confirmNewPassword').val());

        if (_newPassword == '' || _confirmNewPassword == '') {
            Swal.fire({
                title: 'Please fill-up all required fields.',
                type: 'info',
                toast: true,
                timer: 1500,
                position: 'center'
            });
            return false;
        }

        if (_newPassword == '' != _confirmNewPassword == '') {

            Swal.fire({
                title: 'New Password and Confirm New Password do not match.',
                type: 'info',
                toast: true,
                timer: 1500,
                position: 'center'
            });

        } else {

            showLoader("Updating the new password..");
            var dto = {};
            dto.AccountID = accountId;
            dto.AccountType = "admin";
            dto.NewPassword = _newPassword;
            dto.ConfirmNewPassword = _confirmNewPassword;
            postJson('/home/student/reset-password', JSON.stringify(dto)).done((response) => {

                if (response.status == 200) {

                    Swal.fire({
                        title: 'Password Has Been Updated!',
                        text: 'Redirecting. Please wait.',
                        type: 'success',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        onBeforeOpen: () => { Swal.showLoading(); }
                    });

                    let rpTimeoutValue = null;
                    clearTimeout(rpTimeoutValue);

                    rpTimeoutValue = setTimeout(() => {

                        window.location.replace("/Admin/Home/Login");

                    }, 1500);


                } else {

                    Swal.fire({
                        title: response.status,
                        text: "No change happend",
                        type: 'error'
                    });

                }

            }).fail((xhr) => {

                let message = xhr.status == 404 ? 'The resource you are requesting could not be found.' : JSON.parse(xhr.responseText);

                if (message.redirect)
                    window.location.replace("/Admin/Home/Login");

                Swal.fire({
                    title: xhr.status,
                    text: xhr.status == 404 ? message : message.errorMessage,
                    type: "error"
                });

            });

        }

    });

</script>